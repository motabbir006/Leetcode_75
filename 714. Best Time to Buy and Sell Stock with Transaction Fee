//c++

class Solution {
public:
    int maxProfit(std::vector<int>& prices, int fee) {
        int n = prices.size();
        int cash = 0;
        int hold = -prices[0]; 
        
        for (int i = 1; i < n; i++) {
            cash = std::max(cash, hold + prices[i] - fee); 
            hold = std::max(hold, cash - prices[i]); 
            }
        
        return cash; 
    }
};

s
//java
class Solution {
    public int maxProfit(int[] prices, int fee) {
        int n = prices.length;
        int cash = 0; 
        int hold = -prices[0]; 
        
        for (int i = 1; i < n; i++) {
            cash = Math.max(cash, hold + prices[i] - fee);
            hold = Math.max(hold, cash - prices[i]); 
        }
        
        return cash; 
    }
}

