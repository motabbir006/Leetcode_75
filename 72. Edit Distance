#include <string>
#include <algorithm>

class Solution {
public:
    int minDistance(std::string word1, std::string word2) {
        int m = word1.size(), n = word2.size();
        std::vector<int> dp(n + 1, 0);

        for (int j = 0; j <= n; ++j) {
            dp[j] = j;
        }

        for (int i = 1; i <= m; ++i) {
            int prev = dp[0]++;
            for (int j = 1; j <= n; ++j) {
                int temp = dp[j];
                dp[j] = word1[i - 1] == word2[j - 1] ? prev : 1 + std::min({dp[j - 1], dp[j], prev});
                prev = temp;
            }
        }

        return dp[n];
    }
};
